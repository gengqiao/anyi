<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gq.dao.SsoUserMapper">
  <resultMap id="BaseResultMap" type="com.gq.beans.SsoUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginId" jdbcType="VARCHAR" property="loginid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="loginNum" jdbcType="INTEGER" property="loginnum" />
    <result column="lastLoginDate" jdbcType="TIMESTAMP" property="lastlogindate" />
    <result column="fk_site_id" jdbcType="INTEGER" property="fkSiteId" />
    <result column="isValide" jdbcType="INTEGER" property="isvalide" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginId, password, loginNum, lastLoginDate, fk_site_id, isValide
  </sql>
  <select id="selectByExample" parameterType="com.gq.beans.SsoUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByLoginId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where loginId = #{loginid,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sso_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.beans.SsoUserExample">
    delete from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.beans.SsoUser">
    insert into sso_user (id, loginId, password, 
      loginNum, lastLoginDate, fk_site_id, 
      isValide)
    values (#{id,jdbcType=INTEGER}, #{loginid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginnum,jdbcType=INTEGER}, #{lastlogindate,jdbcType=TIMESTAMP}, #{fkSiteId,jdbcType=INTEGER}, 
      #{isvalide,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.beans.SsoUser">
    insert into sso_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginid != null">
        loginId,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginnum != null">
        loginNum,
      </if>
      <if test="lastlogindate != null">
        lastLoginDate,
      </if>
      <if test="fkSiteId != null">
        fk_site_id,
      </if>
      <if test="isvalide != null">
        isValide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginid != null">
        #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        #{isvalide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.beans.SsoUserExample" resultType="java.lang.Integer">
    select count(*) from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sso_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginid != null">
        loginId = #{record.loginid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginnum != null">
        loginNum = #{record.loginnum,jdbcType=INTEGER},
      </if>
      <if test="record.lastlogindate != null">
        lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fkSiteId != null">
        fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="record.isvalide != null">
        isValide = #{record.isvalide,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sso_user
    set id = #{record.id,jdbcType=INTEGER},
      loginId = #{record.loginid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      loginNum = #{record.loginnum,jdbcType=INTEGER},
      lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      isValide = #{record.isvalide,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.beans.SsoUser">
    update sso_user
    <set>
      <if test="loginid != null">
        loginId = #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        loginNum = #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        isValide = #{isvalide,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.beans.SsoUser">
    update sso_user
    set loginId = #{loginid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      loginNum = #{loginnum,jdbcType=INTEGER},
      lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      isValide = #{isvalide,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.gq.benans.SsoUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginId" jdbcType="VARCHAR" property="loginid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="loginNum" jdbcType="INTEGER" property="loginnum" />
    <result column="lastLoginDate" jdbcType="TIMESTAMP" property="lastlogindate" />
    <result column="fk_site_id" jdbcType="INTEGER" property="fkSiteId" />
    <result column="isValide" jdbcType="INTEGER" property="isvalide" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginId, password, loginNum, lastLoginDate, fk_site_id, isValide
  </sql>
  <select id="selectByExample" parameterType="com.gq.benans.SsoUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sso_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.benans.SsoUserExample">
    delete from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.benans.SsoUser">
    insert into sso_user (id, loginId, password, 
      loginNum, lastLoginDate, fk_site_id, 
      isValide)
    values (#{id,jdbcType=INTEGER}, #{loginid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginnum,jdbcType=INTEGER}, #{lastlogindate,jdbcType=TIMESTAMP}, #{fkSiteId,jdbcType=INTEGER}, 
      #{isvalide,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.benans.SsoUser">
    insert into sso_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginid != null">
        loginId,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginnum != null">
        loginNum,
      </if>
      <if test="lastlogindate != null">
        lastLoginDate,
      </if>
      <if test="fkSiteId != null">
        fk_site_id,
      </if>
      <if test="isvalide != null">
        isValide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginid != null">
        #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        #{isvalide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.benans.SsoUserExample" resultType="java.lang.Integer">
    select count(*) from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sso_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginid != null">
        loginId = #{record.loginid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginnum != null">
        loginNum = #{record.loginnum,jdbcType=INTEGER},
      </if>
      <if test="record.lastlogindate != null">
        lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fkSiteId != null">
        fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="record.isvalide != null">
        isValide = #{record.isvalide,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sso_user
    set id = #{record.id,jdbcType=INTEGER},
      loginId = #{record.loginid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      loginNum = #{record.loginnum,jdbcType=INTEGER},
      lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      isValide = #{record.isvalide,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.benans.SsoUser">
    update sso_user
    <set>
      <if test="loginid != null">
        loginId = #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        loginNum = #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        isValide = #{isvalide,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.benans.SsoUser">
    update sso_user
    set loginId = #{loginid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      loginNum = #{loginnum,jdbcType=INTEGER},
      lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      isValide = #{isvalide,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.gq.benas.SsoUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginId" jdbcType="VARCHAR" property="loginid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="loginNum" jdbcType="INTEGER" property="loginnum" />
    <result column="lastLoginDate" jdbcType="TIMESTAMP" property="lastlogindate" />
    <result column="fk_site_id" jdbcType="INTEGER" property="fkSiteId" />
    <result column="isValide" jdbcType="INTEGER" property="isvalide" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginId, password, loginNum, lastLoginDate, fk_site_id, isValide
  </sql>
  <select id="selectByExample" parameterType="com.gq.benas.SsoUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sso_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.benas.SsoUserExample">
    delete from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.benas.SsoUser">
    insert into sso_user (id, loginId, password, 
      loginNum, lastLoginDate, fk_site_id, 
      isValide)
    values (#{id,jdbcType=INTEGER}, #{loginid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginnum,jdbcType=INTEGER}, #{lastlogindate,jdbcType=TIMESTAMP}, #{fkSiteId,jdbcType=INTEGER}, 
      #{isvalide,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.benas.SsoUser">
    insert into sso_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginid != null">
        loginId,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginnum != null">
        loginNum,
      </if>
      <if test="lastlogindate != null">
        lastLoginDate,
      </if>
      <if test="fkSiteId != null">
        fk_site_id,
      </if>
      <if test="isvalide != null">
        isValide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginid != null">
        #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        #{isvalide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.benas.SsoUserExample" resultType="java.lang.Integer">
    select count(*) from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sso_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginid != null">
        loginId = #{record.loginid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginnum != null">
        loginNum = #{record.loginnum,jdbcType=INTEGER},
      </if>
      <if test="record.lastlogindate != null">
        lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fkSiteId != null">
        fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="record.isvalide != null">
        isValide = #{record.isvalide,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sso_user
    set id = #{record.id,jdbcType=INTEGER},
      loginId = #{record.loginid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      loginNum = #{record.loginnum,jdbcType=INTEGER},
      lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      isValide = #{record.isvalide,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.benas.SsoUser">
    update sso_user
    <set>
      <if test="loginid != null">
        loginId = #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        loginNum = #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        isValide = #{isvalide,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.benas.SsoUser">
    update sso_user
    set loginId = #{loginid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      loginNum = #{loginnum,jdbcType=INTEGER},
      lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      isValide = #{isvalide,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.gq.service.SsoUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginId" jdbcType="VARCHAR" property="loginid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="loginNum" jdbcType="INTEGER" property="loginnum" />
    <result column="lastLoginDate" jdbcType="TIMESTAMP" property="lastlogindate" />
    <result column="fk_site_id" jdbcType="INTEGER" property="fkSiteId" />
    <result column="isValide" jdbcType="INTEGER" property="isvalide" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loginId, password, loginNum, lastLoginDate, fk_site_id, isValide
  </sql>
  <select id="selectByExample" parameterType="com.gq.service.SsoUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sso_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.service.SsoUserExample">
    delete from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.service.SsoUser">
    insert into sso_user (id, loginId, password, 
      loginNum, lastLoginDate, fk_site_id, 
      isValide)
    values (#{id,jdbcType=INTEGER}, #{loginid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginnum,jdbcType=INTEGER}, #{lastlogindate,jdbcType=TIMESTAMP}, #{fkSiteId,jdbcType=INTEGER}, 
      #{isvalide,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.service.SsoUser">
    insert into sso_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginid != null">
        loginId,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginnum != null">
        loginNum,
      </if>
      <if test="lastlogindate != null">
        lastLoginDate,
      </if>
      <if test="fkSiteId != null">
        fk_site_id,
      </if>
      <if test="isvalide != null">
        isValide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginid != null">
        #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        #{isvalide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.service.SsoUserExample" resultType="java.lang.Integer">
    select count(*) from sso_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sso_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginid != null">
        loginId = #{record.loginid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginnum != null">
        loginNum = #{record.loginnum,jdbcType=INTEGER},
      </if>
      <if test="record.lastlogindate != null">
        lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fkSiteId != null">
        fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="record.isvalide != null">
        isValide = #{record.isvalide,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sso_user
    set id = #{record.id,jdbcType=INTEGER},
      loginId = #{record.loginid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      loginNum = #{record.loginnum,jdbcType=INTEGER},
      lastLoginDate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{record.fkSiteId,jdbcType=INTEGER},
      isValide = #{record.isvalide,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.service.SsoUser">
    update sso_user
    <set>
      <if test="loginid != null">
        loginId = #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginnum != null">
        loginNum = #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="lastlogindate != null">
        lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="fkSiteId != null">
        fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null">
        isValide = #{isvalide,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.service.SsoUser">
    update sso_user
    set loginId = #{loginid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      loginNum = #{loginnum,jdbcType=INTEGER},
      lastLoginDate = #{lastlogindate,jdbcType=TIMESTAMP},
      fk_site_id = #{fkSiteId,jdbcType=INTEGER},
      isValide = #{isvalide,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>